classDiagram

class System {
- String storeName
- List<Product> products
+ run(): int
+ clear(): void
+ loadProducts(): void
+ listProducts(): void
+ customerMenuLoop(customer: Customer): void
+ adminMenuLoop(admin: Admin): void
+ editProductLoop(): void
+ addProductLoop(): void
+ addProduct(product: Product): void
+ removeProduct(product_id: String): void
+ checkout(cart: Cart): void
+ getProductByIdPtr(id: int): Product*
+ getProductById(id: int): Product
+ checkout(cart : Cart&): void
}


class User {
    <<abstract>>
    - String username
    - String email
    - String password
    + User(username: String, email: String, password: String)
    + User(email: String, password: String)
}


class Admin {
    - String username
    - String email
    - String password
    + Admin(name: String, email: String, password: String)
    + ~Admin()
    + static login(loginEmail: String, loginPassword: String): bool
    + static createNewUser(name: String, email: String, password: String): bool
    + static getUser(email: String): Admin*
    + getName(): String
    + getEmail(): String
    + setName(name: String): void
    + setEmail(email: String): void
    + static createNewProduct(product: Product): bool
    + static saveProduct(products: List<Product>): bool
}

class Customer {
    - String username
    - String email
    - String password
    - Cart cart
    + Customer(username: String, email: String, password: String)
    + Customer(email: String, password: String)
    + ~Customer()
    + addProductToCart(product: Product, quantity: int): void
    + removeProductFromCart(product: Product, quantity: int): void
    + clearCart(): void
    + static login(email: String, password: String): bool
    + static createNewUser(name: String, email: String, password: String): bool
    + static getUser(email: String): Customer
    + getEmail(): String
    + getName(): String
    + setEmail(email: String): void
    + setName(name: String): void
    + getCart(): Cart&
}


class Product {
    - int id
    - String name
    - float price
    - int quantity
    + Product(id: int, name: String, price: float, quantity: int)
    + Product()
    + ~Product()
    + getId(): int
    + getName(): String
    + getPrice(): float
    + getQuantity(): int
    + setId(id: int): void
    + setName(name: String): void
    + setPrice(price: float): void
    + setQuantity(quantity: int): void
    + isValidProduct(): bool
    + printProduct(): void
}

class Cart {
    - float total
    - vector<Product> products
    + Cart()
    + displayCartProducts(): void
    + addProductToCart(product: Product, quantity: int): void
    + removeProductFromCart(productId: int, quantity: int): bool
    + clear(): void
    + getProducts(): vector<Product>
    + sumTotal(price: float): void
    + getTotal(): float
    + getProductQuantity(productId: int): int
}


class Sale {
    -Client client
    -List~Product~ products
    -float totalPrice
    -Date date
    -Payment payment
}


User <|-- Administrator
User <|-- Client

System "1" *-- "0..*" User : manages
System "1" *-- "0..*" Product : manages
System "1" *-- "0..*" Cart : manages
System "1" *-- "0..*" Sale : tracks
Cart "1" *-- "0..*" Product : contains
Sale "1" *-- "1" Customer : belongs to
Sale "1" *-- "0..*" Product : contains